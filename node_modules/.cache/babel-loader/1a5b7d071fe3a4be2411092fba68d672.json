{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radouane.garoiaz\\\\Documents\\\\calendrier-reactjs-master\\\\src\\\\components\\\\Calendrier\\\\Calendrier.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport moment from 'moment/moment';\nimport React, { useEffect, useState } from 'react';\nimport { Form, Table, Button, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport \"./css.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL_DB = \"http://localhost:3002/rdv\";\nconst dateDebutCalendrier = new Date(\"December 28, 2000\");\nconst dateFinCalendrier = new Date(\"January 30, 2040\");\nexport default function Calendrier() {\n  _s();\n\n  const [annees, setAnnees] = useState();\n  const [mois, setMois] = useState();\n  const [jour, setJour] = useState();\n  const [calendrier, setCalendrier] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState([]);\n  const [dateChoisi, setDateChoisi] = useState();\n  const [years, setYears] = useState();\n  const [month, setMonth] = useState();\n  const [day, setDay] = useState();\n  const [calendar, setCalendar] = useState([]);\n  /* const [currentMonth , setCurrentMonth] = useState([]); */\n\n  const [selectedDay, setSelectedDay] = useState();\n  const [rdv, setRdv] = useState({\n    titre: \"\",\n    commentaire: \"\"\n  });\n  const [allRDV, setAllRdv] = useState([]);\n  const [rdvDuJourChoisi, setRdvDuJourChoisi] = useState([]);\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const nomMois = [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Decembre\"];\n  const monthName = moment.monthsShort();\n  const jourDeSemaine = [\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"];\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRdv(prevForm => {\n      return { ...prevForm,\n        [name]: value\n      };\n    });\n  };\n\n  const prevMonth = () => {\n    console.log(mois - 1); // Mois précédent \n\n    if (mois - 1 == 0) {\n      setMois(12);\n      setAnnees(annees - 1);\n    } else setMois(mois - 1);\n  };\n\n  const nextMonth = () => {\n    console.log(mois + 1); // Mois suivant\n\n    if (mois + 1 == 13) {\n      setMois(1);\n      setAnnees(annees + 1);\n    } else setMois(mois + 1);\n  };\n\n  const nextYear = () => {\n    console.log(annees + 1); // Année suivante\n\n    setAnnees(annees + 1);\n  };\n\n  const prevYear = () => {\n    console.log(annees - 1); // Année précedente\n\n    setAnnees(annees - 1);\n  };\n\n  const dayClick = a => {\n    console.log(a);\n    setDateChoisi(a.toLocaleDateString('fr-FR', options));\n  };\n\n  const supprimerRdv = (e, rdv) => {\n    e.preventDefault();\n    axios.delete(URL_DB + `/${rdv.id}`).then(res => console.log(res));\n  };\n\n  const prendreRdv = e => {\n    e.preventDefault();\n    console.log(dateChoisi);\n    console.log(rdv);\n    let obj = {\n      titre: rdv.titre,\n      commentaire: rdv.commentaire,\n      date: dateChoisi\n    };\n    axios.post(URL_DB, obj).then(res => console.log(res));\n  };\n\n  useEffect(() => {\n    const result = calendrier.filter(c => c.getMonth() === mois - 1 && c.getFullYear() === annees);\n    setCurrentMonth(result);\n    setDateChoisi();\n  }, [annees, jour, mois]);\n  useEffect(() => {\n    axios.get(URL_DB + `?date=${dateChoisi}`).then(res => setRdvDuJourChoisi(res.data));\n  }, [dateChoisi]); // remplire calendrier\n\n  useEffect(() => {\n    setAllRdv([]);\n    const date = new Date();\n    setMois(date.getMonth() + 1);\n    setAnnees(date.getFullYear());\n    setJour(date.getDate());\n    var r = [];\n\n    while (dateDebutCalendrier <= dateFinCalendrier) {\n      r.push(new Date(dateDebutCalendrier.setDate(dateDebutCalendrier.getDate() + 1)));\n    }\n\n    setCalendrier(r);\n    setRdvDuJourChoisi([]);\n    axios.get(URL_DB).then(res => setAllRdv(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row text-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-dark prev\",\n              onClick: () => prevMonth(),\n              children: \" < \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"mt-2\",\n              children: nomMois[mois - 1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-dark next\",\n              onClick: () => nextMonth(),\n              children: \" > \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 d-flex justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-dark prev\",\n              onClick: () => prevYear(),\n              children: \" < \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"mt-2\",\n              children: annees\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-dark next\",\n              onClick: () => nextYear(),\n              children: \" > \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(0, 7).map(a => {\n                return /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: jourDeSemaine[a.getDay()]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 44\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"body-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(0, 7).map(a => {\n                const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR', options));\n\n                if (new Date().toLocaleDateString('fr-FR', options) == a.toLocaleDateString('fr-FR', options)) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'black',\n                      color: 'white'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 48\n                  }, this);\n                }\n\n                if (rdvs.length > 0) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'grey'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 48\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 48\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(7, 14).map(a => {\n                const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR', options));\n\n                if (new Date().toLocaleDateString('fr-FR', options) === a.toLocaleDateString('fr-FR', options)) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'black',\n                      color: 'white'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 48\n                  }, this);\n                }\n\n                if (rdvs.length > 0) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'grey'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 48\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 48\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(14, 21).map(a => {\n                const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR', options));\n\n                if (new Date().toLocaleDateString('fr-FR', options) == a.toLocaleDateString('fr-FR', options)) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'black',\n                      color: 'white'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 48\n                  }, this);\n                }\n\n                if (rdvs.length > 0) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'grey'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 48\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 48\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(21, 28).map(a => {\n                const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR', options));\n\n                if (new Date().toLocaleDateString('fr-FR', options) == a.toLocaleDateString('fr-FR', options)) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'black',\n                      color: 'white'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 48\n                  }, this);\n                }\n\n                if (rdvs.length > 0) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'grey'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 48\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 48\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(28, 35).map(a => {\n                const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR', options));\n\n                if (rdvs.length > 0) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'grey'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 48\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 48\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Calendrier, \"73susP38SKydPDBNb1YMPUjHlcc=\");\n\n_c = Calendrier;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendrier\");","map":{"version":3,"sources":["C:/Users/radouane.garoiaz/Documents/calendrier-reactjs-master/src/components/Calendrier/Calendrier.jsx"],"names":["axios","moment","React","useEffect","useState","Form","Table","Button","Card","ListGroup","ListGroupItem","URL_DB","dateDebutCalendrier","Date","dateFinCalendrier","Calendrier","annees","setAnnees","mois","setMois","jour","setJour","calendrier","setCalendrier","currentMonth","setCurrentMonth","dateChoisi","setDateChoisi","years","setYears","month","setMonth","day","setDay","calendar","setCalendar","selectedDay","setSelectedDay","rdv","setRdv","titre","commentaire","allRDV","setAllRdv","rdvDuJourChoisi","setRdvDuJourChoisi","options","weekday","year","nomMois","monthName","monthsShort","jourDeSemaine","onChange","e","name","value","target","prevForm","prevMonth","console","log","nextMonth","nextYear","prevYear","dayClick","a","toLocaleDateString","supprimerRdv","preventDefault","delete","id","then","res","prendreRdv","obj","date","post","result","filter","c","getMonth","getFullYear","get","data","getDate","r","push","setDate","length","slice","map","getDay","rdvs","backgroundColor","color"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport moment from 'moment/moment';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Form, Table , Button, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport \"./css.css\";\r\n\r\nconst URL_DB = \"http://localhost:3002/rdv\";\r\nconst dateDebutCalendrier = new Date(\"December 28, 2000\");\r\nconst dateFinCalendrier = new Date(\"January 30, 2040\");\r\n\r\nexport default function Calendrier() {\r\n\r\n    const [annees, setAnnees] = useState();\r\n    const [mois, setMois] = useState();\r\n    const [jour, setJour] = useState();\r\n\r\n    const [calendrier, setCalendrier] = useState([]);\r\n\r\n    const [currentMonth , setCurrentMonth] = useState([]);\r\n    const [dateChoisi, setDateChoisi] = useState();\r\n\r\n\r\n\r\n    const [years, setYears] = useState();\r\n    const [month, setMonth] = useState();\r\n    const [day, setDay] = useState();\r\n\r\n    const [calendar, setCalendar] = useState([]);\r\n\r\n    /* const [currentMonth , setCurrentMonth] = useState([]); */\r\n    const [selectedDay, setSelectedDay] = useState();\r\n\r\n\r\n    const [rdv , setRdv] = useState({\r\n        titre : \"\",\r\n        commentaire :\"\",\r\n    });\r\n\r\n    const [allRDV, setAllRdv] = useState([]);\r\n    const [rdvDuJourChoisi, setRdvDuJourChoisi] = useState([]);\r\n\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    \r\n    const nomMois = [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\",\r\n    \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Decembre\"\r\n    ];\r\n\r\n    const monthName = moment.monthsShort();\r\n\r\n\r\n    const jourDeSemaine = [\"Dimanche\",\"Lundi\", \"Mardi\",\"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"];\r\n\r\n    const onChange= (e) =>{\r\n        const {name , value}= e.target ;\r\n        setRdv(prevForm =>{ \r\n            return  {...prevForm , [name]: value} \r\n        })\r\n    }\r\n    const prevMonth = () => {\r\n        console.log(mois-1); // Mois précédent \r\n        if(mois-1 == 0){\r\n            setMois(12);\r\n            setAnnees(annees-1);\r\n        }   \r\n        else setMois(mois-1);\r\n    }\r\n    const nextMonth = () => {\r\n        console.log(mois+1); // Mois suivant\r\n        if(mois+1 == 13){\r\n            setMois(1);\r\n            setAnnees(annees+1);\r\n        }\r\n        else setMois(mois+1);\r\n    }\r\n    const nextYear = () => {\r\n        console.log(annees+1); // Année suivante\r\n        setAnnees(annees+1);\r\n    }\r\n    const prevYear = () => {\r\n        console.log(annees-1); // Année précedente\r\n        setAnnees(annees-1);\r\n    }\r\n    const dayClick = (a) => {\r\n        console.log(a);\r\n        setDateChoisi(a.toLocaleDateString('fr-FR',options));\r\n    }\r\n    const supprimerRdv = (e, rdv) => {\r\n        e.preventDefault();\r\n        axios.delete(URL_DB + `/${rdv.id}`).then(res=> console.log(res));\r\n    }\r\n    const prendreRdv = (e) =>{\r\n        e.preventDefault();\r\n        console.log(dateChoisi);\r\n        console.log(rdv);\r\n        let obj = {\r\n            titre : rdv.titre,\r\n            commentaire : rdv.commentaire,\r\n            date : dateChoisi\r\n        }\r\n        axios.post(URL_DB, obj).then(res => console.log(res));\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const result = calendrier.filter(c => (c.getMonth()) === (mois-1) && c.getFullYear() === annees);\r\n        setCurrentMonth(result);\r\n        setDateChoisi();\r\n    }, [annees,jour,mois]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(URL_DB+`?date=${dateChoisi}`).then(res => setRdvDuJourChoisi(res.data));\r\n    }, [dateChoisi]);\r\n\r\n\r\n// remplire calendrier\r\n    useEffect(() => {\r\n        setAllRdv([]);\r\n        const date = new Date();\r\n        setMois(date.getMonth()+1);\r\n        setAnnees(date.getFullYear());\r\n        setJour(date.getDate());\r\n        var r = [];\r\n        while (dateDebutCalendrier <= dateFinCalendrier)\r\n        {\r\n            r.push(new Date(dateDebutCalendrier.setDate(dateDebutCalendrier.getDate() + 1)));\r\n        }\r\n        setCalendrier(r);\r\n        setRdvDuJourChoisi([]);\r\n        axios.get(URL_DB).then(res => setAllRdv(res.data));\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='row text-center mt-5'>\r\n                <div className=\"col-md-6\">\r\n                   {/*  <div className=\"row text-center\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <button className='btn btn-dark prev' onClick={()=> prevMonth()}> &lt; </button>    \r\n                            <b className='mt-2'>{nomMois[mois-1]}</b>\r\n                            <button className='btn btn-dark next' onClick={() => nextMonth()}> &gt; </button>    \r\n                        </div>\r\n                        <div className=\"mt-2 d-flex justify-content-center\">\r\n                            <button className='btn btn-dark prev' onClick={() => prevYear()}> &lt; </button>    \r\n                            <b className='mt-2'>{annees}</b>\r\n                            <button className='btn btn-dark next' onClick={() => nextYear()}> &gt; </button>    \r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n\r\n\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <button className='btn btn-dark prev' onClick={()=> prevMonth()}> &lt; </button>    \r\n                            <b className='mt-2'>{nomMois[mois-1]}</b>\r\n                            <button className='btn btn-dark next' onClick={() => nextMonth()}> &gt; </button>    \r\n                        </div>\r\n                        <div className=\"mt-2 d-flex justify-content-center\">\r\n                            <button className='btn btn-dark prev' onClick={() => prevYear()}> &lt; </button>    \r\n                            <b className='mt-2'>{annees}</b>\r\n                            <button className='btn btn-dark next' onClick={() => nextYear()}> &gt; </button>    \r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <Table bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                {currentMonth.length > 0 && currentMonth.slice(0,7).map(a => {\r\n                                    return <th scope=\"col\">{jourDeSemaine[a.getDay()]}</th>\r\n                                })}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='body-table'>\r\n                                {/* Premiere Semaine */}\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(0,7).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR',options));\r\n                                    if(new Date().toLocaleDateString('fr-FR',options) == a.toLocaleDateString('fr-FR',options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(7,14).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR',options));\r\n                                    if(new Date().toLocaleDateString('fr-FR',options) === a.toLocaleDateString('fr-FR',options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(14,21).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR',options));\r\n                                    if(new Date().toLocaleDateString('fr-FR',options) == a.toLocaleDateString('fr-FR',options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                    \r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(21,28).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR',options));\r\n                                    if(new Date().toLocaleDateString('fr-FR',options) == a.toLocaleDateString('fr-FR',options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        \r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(28,35).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString('fr-FR',options));\r\n                                    if(rdvs.length>0){\r\n                                        \r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                    \r\n                                })}\r\n                                </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n              \r\n            </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}