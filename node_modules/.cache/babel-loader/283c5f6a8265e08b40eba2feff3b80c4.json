{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radouane.garoiaz\\\\Documents\\\\calendrier-reactjs-master\\\\src\\\\components\\\\Calendrier\\\\Calendrier.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport moment from 'moment/moment';\nimport React, { useEffect, useState } from 'react';\nimport { Form, Table, Button } from 'react-bootstrap';\nimport * as Icon from 'react-bootstrap-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport \"./css.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL_DB = \"http://localhost:3002/rdv\";\nconst dateDebutCalendrier = new Date(\"December 28, 2000\");\nconst dateFinCalendrier = new Date(\"January 30, 2040\");\nexport default function Calendrier() {\n  _s();\n\n  const [years, setYears] = useState();\n  const [month, setMonth] = useState();\n  const [day, setDay] = useState();\n  const [calendar, setCalendar] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState([]);\n  const [selectedDay, setSelectedDay] = useState();\n  const [rdv, setRdv] = useState({\n    titre: \"\",\n    commentaire: \"\"\n  });\n  const [allRDV, setAllRdv] = useState([]);\n  const [rdvDuJourChoisi, setRdvDuJourChoisi] = useState([]);\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  const monthName = moment.months();\n  const dayName = moment.weekdays();\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRdv(prevForm => {\n      return { ...prevForm,\n        [name]: value\n      };\n    });\n  };\n  /*  const prevMonth = () => {\r\n       console.log(mois-1); // Mois précédent \r\n       if(mois-1 == 0){\r\n           setMois(12);\r\n           setAnnees(annees-1);\r\n       }   \r\n       else setMois(mois-1);\r\n   }\r\n   const nextMonth = () => {\r\n       console.log(mois+1); // Mois suivant\r\n       if(mois+1 == 13){\r\n           setMois(1);\r\n           setAnnees(annees+1);\r\n       }\r\n       else setMois(mois+1);\r\n   }\r\n   const nextYear = () => {\r\n       console.log(annees+1); // Année suivante\r\n       setAnnees(annees+1);\r\n   }\r\n   const prevYear = () => {\r\n       console.log(annees-1); // Année précedente\r\n       setAnnees(annees-1);\r\n   }\r\n   const dayClick = (a) => {\r\n       console.log(a);\r\n       setDateChoisi(a.toLocaleDateString(\"en-US\",options));\r\n   }\r\n   const supprimerRdv = (e, rdv) => {\r\n       e.preventDefault();\r\n       axios.delete(URL_DB + `/${rdv.id}`).then(res=> console.log(res));\r\n   }\r\n   const prendreRdv = (e) =>{\r\n       e.preventDefault();\r\n       console.log(dateChoisi);\r\n       console.log(rdv);\r\n       let obj = {\r\n           titre : rdv.titre,\r\n           commentaire : rdv.commentaire,\r\n           date : dateChoisi\r\n       }\r\n       axios.post(URL_DB, obj).then(res => console.log(res));\r\n   }\r\n  \n     useEffect(() => {\r\n       const result = calendrier.filter(c => (c.getMonth()) === (mois-1) && c.getFullYear() === annees);\r\n       setCurrentMonth(result);\r\n       setDateChoisi();\r\n   }, [annees,jour,mois]);\r\n  \n     useEffect(() => {\r\n       axios.get(URL_DB+`?date=${dateChoisi}`).then(res => setRdvDuJourChoisi(res.data));\r\n   }, [dateChoisi]);\r\n  \n  // remplire calendrier\r\n   useEffect(() => {\r\n       setAllRdv([]);\r\n       const date = new Date();\r\n       setMois(date.getMonth()+1);\r\n       setAnnees(date.getFullYear());\r\n       setJour(date.getDate());\r\n       var r = [];\r\n       while (dateDebutCalendrier <= dateFinCalendrier)\r\n       {\r\n           r.push(new Date(dateDebutCalendrier.setDate(dateDebutCalendrier.getDate() + 1)));\r\n       }\r\n       setCalendrier(r);\r\n       setRdvDuJourChoisi([]);\r\n       axios.get(URL_DB).then(res => setAllRdv(res.data));\r\n   }, []);\r\n  */\n  //----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n  const [show, setShow] = useState(false);\n  const [showRes, setShowRes] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleCloseRes = () => setShowRes(false);\n\n  const handleShowRes = () => setShowRes(true);\n\n  const prevMonth = () => {\n    console.log(month - 1); // Mois précédent \n\n    if (month - 1 === 0) {\n      setMonth(12);\n      setYears(years - 1);\n    } else setMonth(month - 1);\n  };\n\n  const nextMonth = () => {\n    console.log(month + 1); // Mois suivant\n\n    if (month + 1 == 13) {\n      setMonth(1);\n      setYears(years + 1);\n    } else setMonth(month + 1);\n  };\n\n  const nextYear = () => {\n    console.log(years + 1); // Année suivante\n\n    setYears(years + 1);\n  };\n\n  const prevYear = () => {\n    console.log(years - 1); // Année précedente\n\n    setYears(years - 1);\n  };\n\n  const dayClick = a => {\n    console.log(a);\n    setSelectedDay(a.toLocaleDateString(\"en-US\", options));\n  };\n\n  const rdvDayClick = () => {\n    setShow(true);\n  };\n\n  const supprimerRdv = (e, rdv) => {\n    e.preventDefault();\n    axios.delete(URL_DB + `/${rdv.id}`).then(res => console.log(res));\n  };\n\n  const prendreRdv = e => {\n    e.preventDefault();\n    console.log(selectedDay);\n    console.log(rdv);\n    let obj = {\n      titre: rdv.titre,\n      commentaire: rdv.commentaire,\n      date: selectedDay\n    };\n    axios.post(URL_DB, obj).then(res => console.log(res));\n  };\n\n  useEffect(() => {\n    const result = calendar.filter(c => c.getMonth() === month - 1 && c.getFullYear() === years);\n    setCurrentMonth(result);\n    setSelectedDay();\n  }, [years, day, month]); // get\n\n  useEffect(() => {\n    axios.get(URL_DB + `?date=${selectedDay}`).then(res => setRdvDuJourChoisi(res.data));\n  }, [selectedDay]); // remplire calendrier\n\n  useEffect(() => {\n    setAllRdv([]);\n    const date = new Date();\n    setMonth(date.getMonth() + 1);\n    setYears(date.getFullYear());\n    setDay(date.getDate());\n    var r = [];\n\n    while (dateDebutCalendrier <= dateFinCalendrier) {\n      r.push(new Date(dateDebutCalendrier.setDate(dateDebutCalendrier.getDate() + 1)));\n    }\n\n    setCalendar(r);\n    setRdvDuJourChoisi([]);\n    axios.get(URL_DB).then(res => setAllRdv(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row text-center mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-secondary prev\",\n              onClick: () => prevMonth(),\n              children: [\" \", /*#__PURE__*/_jsxDEV(Icon.ArrowLeftSquare, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 108\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"mt-2\",\n              children: monthName[month - 1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-secondary next\",\n              onClick: () => nextMonth(),\n              children: [\" \", /*#__PURE__*/_jsxDEV(Icon.ArrowRightSquare, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 109\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 d-flex justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-secondary prev\",\n              onClick: () => prevYear(),\n              children: [\" \", /*#__PURE__*/_jsxDEV(Icon.ArrowLeftSquare, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 108\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"mt-2\",\n              children: years\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-secondary next\",\n              onClick: () => nextYear(),\n              children: [\" \", /*#__PURE__*/_jsxDEV(Icon.ArrowRightSquare, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 108\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(0, 7).map(a => {\n                return /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: dayName[a.getDay()]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 44\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"body-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(0, 7).map(a => {\n                const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString(\"en-US\", options)); //mettre la case de jour en noire\n\n                if (new Date().toLocaleDateString(\"en-US\", options) == a.toLocaleDateString(\"en-US\", options)) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'black',\n                      color: 'white'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 48\n                  }, this);\n                } //griser la case des rdv déja prise\n\n\n                if (rdvs.length > 0) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'grey'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 48\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    onClick: () => {\n                      dayClick(a);\n                      rdvDayClick();\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 48\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(7, 14).map(a => {\n                const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString(\"en-US\", options));\n\n                if (new Date().toLocaleDateString(\"en-US\", options) === a.toLocaleDateString(\"en-US\", options)) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'black',\n                      color: 'white'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 48\n                  }, this);\n                }\n\n                if (rdvs.length > 0) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'grey'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 48\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    onClick: () => {\n                      dayClick(a);\n                      rdvDayClick();\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 48\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(14, 21).map(a => {\n                const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString(\"en-US\", options));\n\n                if (new Date().toLocaleDateString(\"en-US\", options) == a.toLocaleDateString(\"en-US\", options)) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'black',\n                      color: 'white'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 48\n                  }, this);\n                }\n\n                if (rdvs.length > 0) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'grey'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 48\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    onClick: () => {\n                      dayClick(a);\n                      rdvDayClick();\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 48\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(21, 28).map(a => {\n                const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString(\"en-US\", options));\n\n                if (new Date().toLocaleDateString(\"en-US\", options) == a.toLocaleDateString(\"en-US\", options)) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'black',\n                      color: 'white'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 48\n                  }, this);\n                }\n\n                if (rdvs.length > 0) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'grey'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 48\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    onClick: () => {\n                      dayClick(a);\n                      rdvDayClick();\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 48\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: currentMonth.length > 0 && currentMonth.slice(28, 31).map(a => {\n                const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString(\"en-US\", options));\n\n                if (rdvs.length > 0) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    style: {\n                      backgroundColor: 'grey'\n                    },\n                    onClick: () => {\n                      dayClick(a);\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 48\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-md-1 item-tab\",\n                    onClick: () => {\n                      dayClick(a);\n                      rdvDayClick();\n                    },\n                    children: a.getDate()\n                  }, a, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 48\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Modal, {\n            show: show,\n            onHide: handleClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Make an appointment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formRDV_titre\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"text-center\",\n                  type: \"text\",\n                  placeholder: \"Enter the title of the appointment\",\n                  name: \"titre\",\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"textarea\",\n                name: \"commentaire\",\n                placeholder: \"Message\",\n                style: {\n                  width: '30em'\n                },\n                onChange: onChange,\n                className: \"text-center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 mt-3\",\n                controlId: \"formRDV_date\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"text-center\",\n                  type: \"text\",\n                  placeholder: \"Choose your date\",\n                  name: \"date\",\n                  disabled: true,\n                  value: selectedDay\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: handleClose,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                type: \"submit\",\n                onClick: e => prendreRdv(e),\n                children: \"Confirm RDV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 7\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row text-center mt-5\",\n      children: rdvDuJourChoisi.length > 0 && rdvDuJourChoisi.map(rdv => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleShowRes,\n            children: \"Show RDV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: showRes,\n            onHide: handleCloseRes,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"RDV Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formRDV_titre\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"text-center\",\n                  type: \"text\",\n                  placeholder: \"Enter the title of the appointment\",\n                  name: \"titre\",\n                  value: rdv.titre,\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"textarea\",\n                name: \"commentaire\",\n                placeholder: \"Message\",\n                style: {\n                  width: '30em'\n                },\n                onChange: onChange,\n                className: \"text-center\",\n                value: rdv.commentaire\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 mt-3\",\n                controlId: \"formRDV_date\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"text-center\",\n                  type: \"text\",\n                  placeholder: \"Choose your date\",\n                  name: \"date\",\n                  disabled: true,\n                  value: rdv.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: handleCloseRes,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: handleCloseRes,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Calendrier, \"9zzx8aBOxB9+EVCreiL0LayEy00=\");\n\n_c = Calendrier;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendrier\");","map":{"version":3,"sources":["C:/Users/radouane.garoiaz/Documents/calendrier-reactjs-master/src/components/Calendrier/Calendrier.jsx"],"names":["axios","moment","React","useEffect","useState","Form","Table","Button","Icon","Modal","URL_DB","dateDebutCalendrier","Date","dateFinCalendrier","Calendrier","years","setYears","month","setMonth","day","setDay","calendar","setCalendar","currentMonth","setCurrentMonth","selectedDay","setSelectedDay","rdv","setRdv","titre","commentaire","allRDV","setAllRdv","rdvDuJourChoisi","setRdvDuJourChoisi","options","weekday","year","monthName","months","dayName","weekdays","onChange","e","name","value","target","prevForm","show","setShow","showRes","setShowRes","handleClose","handleShow","handleCloseRes","handleShowRes","prevMonth","console","log","nextMonth","nextYear","prevYear","dayClick","a","toLocaleDateString","rdvDayClick","supprimerRdv","preventDefault","delete","id","then","res","prendreRdv","obj","date","post","result","filter","c","getMonth","getFullYear","get","data","getDate","r","push","setDate","length","slice","map","getDay","rdvs","backgroundColor","color","width"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport moment from 'moment/moment';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Form, Table , Button } from 'react-bootstrap';\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport \"./css.css\";\r\n\r\nconst URL_DB = \"http://localhost:3002/rdv\";\r\nconst dateDebutCalendrier = new Date(\"December 28, 2000\");\r\nconst dateFinCalendrier = new Date(\"January 30, 2040\");\r\n\r\nexport default function Calendrier() {\r\n\r\n\r\n    const [years, setYears] = useState();\r\n    const [month, setMonth] = useState();\r\n    const [day, setDay] = useState();\r\n\r\n    const [calendar, setCalendar] = useState([]);\r\n\r\n    const [currentMonth , setCurrentMonth] = useState([]); \r\n    const [selectedDay, setSelectedDay] = useState();\r\n\r\n\r\n    const [rdv , setRdv] = useState({\r\n        titre : \"\",\r\n        commentaire :\"\",\r\n    });\r\n\r\n    const [allRDV, setAllRdv] = useState([]);\r\n    const [rdvDuJourChoisi, setRdvDuJourChoisi] = useState([]);\r\n\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    \r\n\r\n\r\n    const monthName = moment.months();\r\n\r\n    const dayName = moment.weekdays();\r\n\r\n\r\n\r\n    const onChange= (e) =>{\r\n        const {name , value}= e.target ;\r\n        setRdv(prevForm =>{ \r\n            return  {...prevForm , [name]: value} \r\n        })\r\n    }\r\n   /*  const prevMonth = () => {\r\n        console.log(mois-1); // Mois précédent \r\n        if(mois-1 == 0){\r\n            setMois(12);\r\n            setAnnees(annees-1);\r\n        }   \r\n        else setMois(mois-1);\r\n    }\r\n    const nextMonth = () => {\r\n        console.log(mois+1); // Mois suivant\r\n        if(mois+1 == 13){\r\n            setMois(1);\r\n            setAnnees(annees+1);\r\n        }\r\n        else setMois(mois+1);\r\n    }\r\n    const nextYear = () => {\r\n        console.log(annees+1); // Année suivante\r\n        setAnnees(annees+1);\r\n    }\r\n    const prevYear = () => {\r\n        console.log(annees-1); // Année précedente\r\n        setAnnees(annees-1);\r\n    }\r\n    const dayClick = (a) => {\r\n        console.log(a);\r\n        setDateChoisi(a.toLocaleDateString(\"en-US\",options));\r\n    }\r\n    const supprimerRdv = (e, rdv) => {\r\n        e.preventDefault();\r\n        axios.delete(URL_DB + `/${rdv.id}`).then(res=> console.log(res));\r\n    }\r\n    const prendreRdv = (e) =>{\r\n        e.preventDefault();\r\n        console.log(dateChoisi);\r\n        console.log(rdv);\r\n        let obj = {\r\n            titre : rdv.titre,\r\n            commentaire : rdv.commentaire,\r\n            date : dateChoisi\r\n        }\r\n        axios.post(URL_DB, obj).then(res => console.log(res));\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const result = calendrier.filter(c => (c.getMonth()) === (mois-1) && c.getFullYear() === annees);\r\n        setCurrentMonth(result);\r\n        setDateChoisi();\r\n    }, [annees,jour,mois]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(URL_DB+`?date=${dateChoisi}`).then(res => setRdvDuJourChoisi(res.data));\r\n    }, [dateChoisi]);\r\n\r\n\r\n// remplire calendrier\r\n    useEffect(() => {\r\n        setAllRdv([]);\r\n        const date = new Date();\r\n        setMois(date.getMonth()+1);\r\n        setAnnees(date.getFullYear());\r\n        setJour(date.getDate());\r\n        var r = [];\r\n        while (dateDebutCalendrier <= dateFinCalendrier)\r\n        {\r\n            r.push(new Date(dateDebutCalendrier.setDate(dateDebutCalendrier.getDate() + 1)));\r\n        }\r\n        setCalendrier(r);\r\n        setRdvDuJourChoisi([]);\r\n        axios.get(URL_DB).then(res => setAllRdv(res.data));\r\n    }, []);\r\n */\r\n\r\n\r\n    //----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [showRes, setShowRes] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const handleCloseRes = () => setShowRes(false);\r\n    const handleShowRes = () => setShowRes(true);\r\n\r\n\r\n    const prevMonth = () => {\r\n        console.log(month-1); // Mois précédent \r\n        if(month-1 === 0){\r\n            setMonth(12);\r\n            setYears(years-1);\r\n        }   \r\n        else setMonth(month-1);\r\n    }\r\n    const nextMonth = () => {\r\n        console.log(month+1); // Mois suivant\r\n        if(month+1 == 13){\r\n            setMonth(1);\r\n            setYears(years+1);\r\n        }\r\n        else setMonth(month+1);\r\n    }\r\n    const nextYear = () => {\r\n        console.log(years+1); // Année suivante\r\n        setYears(years+1);\r\n    }\r\n    const prevYear = () => {\r\n        console.log(years-1); // Année précedente\r\n        setYears(years-1);\r\n    }\r\n    const dayClick = (a) => {\r\n        console.log(a);\r\n        setSelectedDay(a.toLocaleDateString(\"en-US\",options));\r\n    }\r\n\r\n    const rdvDayClick = () => {\r\n        \r\n        setShow(true);\r\n        \r\n    }\r\n\r\n    const supprimerRdv = (e, rdv) => {\r\n        e.preventDefault();\r\n        axios.delete(URL_DB + `/${rdv.id}`).then(res=> console.log(res));\r\n    }\r\n    const prendreRdv = (e) =>{\r\n        e.preventDefault();\r\n\r\n            console.log(selectedDay);\r\n            console.log(rdv);\r\n            let obj = {\r\n                titre : rdv.titre,\r\n                commentaire : rdv.commentaire,\r\n                date : selectedDay\r\n            }\r\n            axios.post(URL_DB, obj).then(res => console.log(res)); \r\n      \r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const result = calendar.filter(c => (c.getMonth()) === (month-1) && c.getFullYear() === years);\r\n        setCurrentMonth(result);\r\n        setSelectedDay();\r\n    }, [years,day,month]);\r\n\r\n\r\n    // get\r\n    useEffect(() => {\r\n        axios.get(URL_DB+`?date=${selectedDay}`).then(res => setRdvDuJourChoisi(res.data));\r\n    }, [selectedDay]);\r\n\r\n\r\n// remplire calendrier\r\n    useEffect(() => {\r\n        setAllRdv([]);\r\n        const date = new Date();\r\n        setMonth(date.getMonth()+1);\r\n        setYears(date.getFullYear());\r\n        setDay(date.getDate());\r\n        var r = [];\r\n        while (dateDebutCalendrier <= dateFinCalendrier)\r\n        {\r\n            r.push(new Date(dateDebutCalendrier.setDate(dateDebutCalendrier.getDate() + 1)));\r\n        }\r\n        setCalendar(r);\r\n        setRdvDuJourChoisi([]);\r\n        axios.get(URL_DB).then(res => setAllRdv(res.data));\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='row text-center mt-5'>\r\n                <div className=\"col-md-12\">\r\n\r\n                    <div className=\"row text-center\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <button className='btn btn-outline-secondary prev' onClick={()=> prevMonth()}> <Icon.ArrowLeftSquare/> </button>    \r\n                            <b className='mt-2'>{monthName[month-1]}</b>\r\n                            <button className='btn btn-outline-secondary next' onClick={() => nextMonth()}> <Icon.ArrowRightSquare/> </button>    \r\n                        </div>\r\n                        <div className=\"mt-2 d-flex justify-content-center\">\r\n                            <button className='btn btn-outline-secondary prev' onClick={() => prevYear()}> <Icon.ArrowLeftSquare/> </button>    \r\n                            <b className='mt-2'>{years}</b>\r\n                            <button className='btn btn-outline-secondary next' onClick={() => nextYear()}> <Icon.ArrowRightSquare/> </button>    \r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <br />\r\n                    <Table bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                {currentMonth.length > 0 && currentMonth.slice(0,7).map(a => {\r\n                             \r\n                                    return <th scope=\"col\">{dayName[a.getDay()]}</th>\r\n                                })}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className='body-table'>\r\n                                {/* Premiere Semaine */}\r\n                                <tr> \r\n\r\n                           \r\n\r\n\r\n                                    \r\n                                {currentMonth.length > 0 && currentMonth.slice(0,7).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString(\"en-US\",options));\r\n                                    //mettre la case de jour en noire\r\n                                    if(new Date().toLocaleDateString(\"en-US\",options) == a.toLocaleDateString(\"en-US\",options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                        \r\n                                    \r\n                                    //griser la case des rdv déja prise\r\n                                    if(rdvs.length>0){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                            rdvDayClick();\r\n                                          \r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                 {currentMonth.length > 0 && currentMonth.slice(7,14).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString(\"en-US\",options));\r\n                                    if(new Date().toLocaleDateString(\"en-US\",options) === a.toLocaleDateString(\"en-US\",options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                            rdvDayClick();\r\n                                           \r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(14,21).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString(\"en-US\",options));\r\n                                    if(new Date().toLocaleDateString(\"en-US\",options) == a.toLocaleDateString(\"en-US\",options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                            rdvDayClick();\r\n                                           \r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                    \r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(21,28).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString(\"en-US\",options));\r\n                                    if(new Date().toLocaleDateString(\"en-US\",options) == a.toLocaleDateString(\"en-US\",options)){\r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'black',color:'white'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }\r\n                                    if(rdvs.length>0){\r\n                                        \r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                            rdvDayClick();\r\n                                           \r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                })}\r\n                                </tr>\r\n                                <tr> \r\n                                {currentMonth.length > 0 && currentMonth.slice(28,31).map(a => {\r\n                                    const rdvs = allRDV.filter(rdv => rdv.date === a.toLocaleDateString(\"en-US\",options));\r\n                                    if(rdvs.length>0){\r\n                                        \r\n                                        return <td className='col-md-1 item-tab' \r\n                                                    key={a} \r\n                                                    style={{backgroundColor:'grey'}}\r\n                                                    onClick={()=> {\r\n                                                    dayClick(a);\r\n                                                    \r\n                                                }}>\r\n                                                    {a.getDate()}\r\n                                                 </td>\r\n                                    }else{\r\n                                        return <td className='col-md-1 item-tab' key={a} onClick={()=> {\r\n                                            dayClick(a);\r\n                                            rdvDayClick();\r\n                                           \r\n                                        }}>{a.getDate()}</td>\r\n                                    }\r\n                                    \r\n                                })} \r\n                                </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <div className='col-md-6'>\r\n\r\n                <>\r\n     {/*  <Button variant=\"primary\" onClick={handleShow}>\r\n        Take Appointment\r\n      </Button> */}\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Make an appointment</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form.Group className=\"mb-3\" controlId=\"formRDV_titre\">\r\n                            <Form.Control className=\"text-center\" type=\"text\" placeholder=\"Enter the title of the appointment\" name=\"titre\" onChange={onChange}/>\r\n                        </Form.Group>\r\n                        <input type=\"textarea\" \r\n                                name=\"commentaire\"\r\n                                placeholder=\"Message\"\r\n                                style={{width:'30em'}}\r\n                                onChange={onChange}\r\n                                className='text-center'\r\n                        />\r\n\r\n<Form.Group className=\"mb-3 mt-3\" controlId=\"formRDV_date\">\r\n                            <Form.Control className=\"text-center\" type=\"text\" placeholder=\"Choose your date\" name=\"date\" disabled={true} value={selectedDay}/>\r\n                        </Form.Group>\r\n                       \r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"success\" type=\"submit\" onClick={(e)=> prendreRdv(e)}>\r\n                            Confirm RDV\r\n                        </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n            <div className=\"row text-center mt-5\">\r\n                {rdvDuJourChoisi.length>0 && \r\n                    rdvDuJourChoisi.map(rdv => {\r\n                        return (\r\n                            <>\r\n                              <Button variant=\"primary\" onClick={handleShowRes}>\r\n                                Show RDV\r\n                              </Button>\r\n                        \r\n                              <Modal show={showRes} onHide={handleCloseRes}>\r\n                                <Modal.Header closeButton>\r\n                                  <Modal.Title>RDV Details</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                <Form.Group className=\"mb-3\" controlId=\"formRDV_titre\">\r\n                            <Form.Control className=\"text-center\" type=\"text\" placeholder=\"Enter the title of the appointment\" name=\"titre\" value={rdv.titre} onChange={onChange}/>\r\n                        </Form.Group>\r\n                        <input type=\"textarea\" \r\n                                name=\"commentaire\"\r\n                                placeholder=\"Message\"\r\n                                style={{width:'30em'}}\r\n                                onChange={onChange}\r\n                                className='text-center'\r\n                                value={rdv.commentaire}\r\n                        />\r\n\r\n<Form.Group className=\"mb-3 mt-3\" controlId=\"formRDV_date\">\r\n                            <Form.Control className=\"text-center\" type=\"text\" placeholder=\"Choose your date\" name=\"date\" disabled={true} value={rdv.date}/>\r\n                        </Form.Group>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                  <Button variant=\"secondary\" onClick={handleCloseRes}>\r\n                                    Close\r\n                                  </Button>\r\n                                  <Button variant=\"secondary\" onClick={handleCloseRes}>\r\n                                    Close\r\n                                  </Button>\r\n                                </Modal.Footer>\r\n                              </Modal>\r\n                            </>\r\n                          );\r\n                    })\r\n                }\r\n            </div>\r\n              \r\n            \r\n      \r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}